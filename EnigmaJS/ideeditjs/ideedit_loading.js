var spritestructarray = {0:{name:"spr_player",id:0,transparent:true,mask:false,smooth:false,originX:6,originY:6,bbLeft:0,bbRight:11,bbTop:0,bbBottom:11,subImageCount:1},1:{name:"sprite1",id:1,transparent:true,mask:false,smooth:false,originX:16,originY:0,bbLeft:31,bbRight:31,bbTop:0,bbBottom:0,subImageCount:1},2:{name:"sprite2",id:2,transparent:false,mask:false,smooth:false,originX:5,originY:5,bbLeft:0,bbRight:9,bbTop:0,bbBottom:9,subImageCount:1},3:{name:"wall2s",id:3,transparent:true,mask:false,smooth:false,originX:1,originY:16,bbLeft:0,bbRight:1,bbTop:0,bbBottom:30,subImageCount:1},4:{name:"sprite4",id:4,transparent:true,mask:false,smooth:false,originX:11,originY:11,bbLeft:6,bbRight:15,bbTop:6,bbBottom:15,subImageCount:1},5:{name:"sprite5",id:5,transparent:false,mask:false,smooth:false,originX:2,originY:2,bbLeft:0,bbRight:4,bbTop:0,bbBottom:4,subImageCount:1},6:{name:"sprite6",id:6,transparent:false,mask:false,smooth:false,originX:4,originY:4,bbLeft:0,bbRight:7,bbTop:0,bbBottom:7,subImageCount:1},7:{name:"floor_spr",id:7,transparent:true,mask:false,smooth:false,originX:16,originY:16,bbLeft:0,bbRight:31,bbTop:0,bbBottom:31,subImageCount:1},8:{name:"sprite8",id:8,transparent:true,mask:false,smooth:false,originX:16,originY:16,bbLeft:0,bbRight:31,bbTop:13,bbBottom:21,subImageCount:1},9:{name:"sprite9",id:9,transparent:true,mask:false,smooth:false,originX:16,originY:16,bbLeft:11,bbRight:19,bbTop:0,bbBottom:31,subImageCount:1},11:{name:"sprite11",id:11,transparent:true,mask:false,smooth:false,originX:5,originY:5,bbLeft:0,bbRight:9,bbTop:0,bbBottom:9,subImageCount:1},12:{name:"pool",id:12,transparent:false,mask:false,smooth:false,originX:64,originY:64,bbLeft:0,bbRight:127,bbTop:0,bbBottom:127,subImageCount:13},14:{name:"sprite14",id:14,transparent:false,mask:false,smooth:false,originX:0,originY:0,bbLeft:0,bbRight:0,bbTop:0,bbBottom:0,subImageCount:1},15:{name:"sprite15",id:15,transparent:false,mask:false,smooth:false,originX:5,originY:5,bbLeft:0,bbRight:9,bbTop:0,bbBottom:9,subImageCount:1},16:{name:"splash_spr",id:16,transparent:true,mask:false,smooth:false,originX:16,originY:16,bbLeft:0,bbRight:31,bbTop:9,bbBottom:31,subImageCount:1},18:{name:"targetspr",id:18,transparent:true,mask:false,smooth:false,originX:5,originY:5,bbLeft:0,bbRight:9,bbTop:0,bbBottom:9,subImageCount:1},21:{name:"pointer",id:21,transparent:true,mask:false,smooth:false,originX:16,originY:16,bbLeft:0,bbRight:30,bbTop:0,bbBottom:30,subImageCount:1},23:{name:"sprite23",id:23,transparent:true,mask:false,smooth:false,originX:16,originY:16,bbLeft:8,bbRight:23,bbTop:8,bbBottom:23,subImageCount:1},25:{name:"guntex",id:25,transparent:false,mask:false,smooth:false,originX:64,originY:64,bbLeft:0,bbRight:127,bbTop:0,bbBottom:127,subImageCount:1},26:{name:"pointtrans",id:26,transparent:false,mask:false,smooth:false,originX:16,originY:16,bbLeft:0,bbRight:31,bbTop:0,bbBottom:31,subImageCount:1},27:{name:"sprite27",id:27,transparent:false,mask:false,smooth:false,originX:16,originY:16,bbLeft:0,bbRight:31,bbTop:0,bbBottom:31,subImageCount:1},28:{name:"sprite28",id:28,transparent:true,mask:false,smooth:false,originX:16,originY:16,bbLeft:0,bbRight:31,bbTop:0,bbBottom:31,subImageCount:1},29:{name:"sprite29",id:29,transparent:true,mask:false,smooth:false,originX:16,originY:16,bbLeft:0,bbRight:31,bbTop:0,bbBottom:31,subImageCount:1},31:{name:"fountain_spr",id:31,transparent:true,mask:false,smooth:false,originX:10,originY:10,bbLeft:0,bbRight:19,bbTop:0,bbBottom:19,subImageCount:1},32:{name:"gore",id:32,transparent:true,mask:false,smooth:false,originX:69,originY:61,bbLeft:20,bbRight:117,bbTop:12,bbBottom:110,subImageCount:4},33:{name:"blood_puddle",id:33,transparent:true,mask:false,smooth:true,originX:123,originY:123,bbLeft:0,bbRight:250,bbTop:0,bbBottom:257,subImageCount:4},34:{name:"sprite34",id:34,transparent:true,mask:false,smooth:false,originX:0,originY:0,bbLeft:0,bbRight:0,bbTop:0,bbBottom:0,subImageCount:0,35:{name:"sprite35",id:35,transparent:true,mask:false,smooth:false,originX:0,originY:0,bbLeft:0,bbRight:0,bbTop:0,bbBottom:0,subImageCount:0,36:{name:"dummy",id:36,transparent:true,mask:false,smooth:false,originX:57,originY:58,bbLeft:1,bbRight:112,bbTop:1,bbBottom:114,subImageCount:1},37:{name:"sprite37",id:37,transparent:false,mask:false,smooth:false,originX:1,originY:1,bbLeft:0,bbRight:1,bbTop:0,bbBottom:1,subImageCount:1}};var soundstructarray = {2:{name:"sound2",id:2,fileType:".wav",fileName:"a73487.wav",chorus:false,echo:false,flanger:false,gargle:false,reverb:false,volume:1.0,pan:0.0,preload:true}};
var backgroundstructarray = {0:{name:"back1",id:0,transparent:false,smoothEdges:false,preload:true},1:{name:"back",id:1,transparent:false,smoothEdges:false,preload:true},2:{name:"treetop",id:2,transparent:false,smoothEdges:false,preload:false},3:{name:"treebark",id:3,transparent:false,smoothEdges:false,preload:false},4:{name:"box",id:4,transparent:false,smoothEdges:false,preload:false},13:{name:"chunktex",id:13,transparent:false,smoothEdges:false,preload:false}};
var pathstructarray = {}; //no paths 
scriptid_1=script___Chunk1=function() {;{ enigma.system.access ( this.global ) . model_chunk1 = this.d3d_model_create ( ) ; this.d3d_model_primitive_begin ( enigma.system.access ( this.global ) . model_chunk1 , 4.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 1.0607 , 0.0000 , 0.8787 , 0.9413 , - 0.2757 , - 0.1949 , 0.6100 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 1.5000 , 1.5000 , 0.8787 , 0.9413 , - 0.2757 , - 0.1949 , 0.5475 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , 2.1213 , 3.0000 , 0.9413 , - 0.2757 , - 0.1949 , 0.5475 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 1.5000 , 1.5000 , 0.8787 , 0.6271 , - 0.1837 , - 0.7570 , 0.5475 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 1.0607 , 0.0000 , 0.8787 , 0.6271 , - 0.1837 , - 0.7570 , 0.6100 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 0.0000 , 0.0000 , 0.6271 , - 0.1837 , - 0.7570 , 0.5788 , 0.7400 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 3.0000 , 0.0000 , 3.0000 , 0.7058 , 0.2924 , 0.6453 , 0.6100 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , 2.1213 , 3.0000 , 0.7058 , 0.2924 , 0.6453 , 0.5475 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.7500 , 0.7500 , 5.1213 , 0.7058 , 0.2924 , 0.6453 , 0.5475 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , 2.1213 , 3.0000 , 0.7058 , 0.2924 , - 0.6453 , 0.5475 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 3.0000 , 0.0000 , 3.0000 , 0.7058 , 0.2924 , - 0.6453 , 0.6100 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 1.0607 , 0.0000 , 0.8787 , 0.7058 , 0.2924 , - 0.6453 , 0.6100 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , 0.0000 , 5.1213 , - 0.2968 , - 0.5427 , 0.7857 , 0.6100 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.7500 , 0.7500 , 5.1213 , - 0.2968 , - 0.5427 , 0.7857 , 0.5475 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 0.0000 , 4.3200 , - 0.2968 , - 0.5427 , 0.7857 , 0.5788 , 0.2400 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.7500 , 0.7500 , 5.1213 , 0.4706 , 0.8605 , 0.1949 , 0.5475 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , 0.0000 , 5.1213 , 0.4706 , 0.8605 , 0.1949 , 0.6100 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 3.0000 , 0.0000 , 3.0000 , 0.4706 , 0.8605 , 0.1949 , 0.6100 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 1.5000 , 1.5000 , 0.8787 , - 0.2113 , 0.7214 , - 0.6595 , 0.5475 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 1.0607 , 0.8787 , - 0.2113 , 0.7214 , - 0.6595 , 0.4850 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 3.0000 , 3.0000 , - 0.2113 , 0.7214 , - 0.6595 , 0.4850 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 1.0607 , 0.8787 , - 0.1837 , 0.6271 , - 0.7570 , 0.4850 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 1.5000 , 1.5000 , 0.8787 , - 0.1837 , 0.6271 , - 0.7570 , 0.5475 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 0.0000 , 0.0000 , - 0.1837 , 0.6271 , - 0.7570 , 0.5163 , 0.7400 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , 2.1213 , 3.0000 , 0.3574 , 0.8629 , 0.3574 , 0.5475 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 3.0000 , 3.0000 , 0.3574 , 0.8629 , 0.3574 , 0.4850 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 2.1213 , 5.1213 , 0.3574 , 0.8629 , 0.3574 , 0.4850 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 3.0000 , 3.0000 , 0.3574 , 0.8629 , - 0.3574 , 0.4850 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , 2.1213 , 3.0000 , 0.3574 , 0.8629 , - 0.3574 , 0.5475 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 1.5000 , 1.5000 , 0.8787 , 0.3574 , 0.8629 , - 0.3574 , 0.5475 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.7500 , 0.7500 , 5.1213 , - 0.5427 , - 0.2968 , 0.7857 , 0.5475 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 2.1213 , 5.1213 , - 0.5427 , - 0.2968 , 0.7857 , 0.4850 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 0.0000 , 4.3200 , - 0.5427 , - 0.2968 , 0.7857 , 0.5163 , 0.2400 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 2.1213 , 5.1213 , 0.6595 , 0.3607 , 0.6595 , 0.4850 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.7500 , 0.7500 , 5.1213 , 0.6595 , 0.3607 , 0.6595 , 0.5475 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , 2.1213 , 3.0000 , 0.6595 , 0.3607 , 0.6595 , 0.5475 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 1.0607 , 0.8787 , 0.2783 , 0.9503 , 0.1392 , 0.4850 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , 1.5000 , 0.8787 , 0.2783 , 0.9503 , 0.1392 , 0.4225 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.0607 , 1.0607 , 3.0000 , 0.2783 , 0.9503 , 0.1392 , 0.4225 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , 1.5000 , 0.8787 , 0.1837 , 0.6271 , - 0.7570 , 0.4225 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 1.0607 , 0.8787 , 0.1837 , 0.6271 , - 0.7570 , 0.4850 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 0.0000 , 0.0000 , 0.1837 , 0.6271 , - 0.7570 , 0.4538 , 0.7400 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 3.0000 , 3.0000 , - 0.8446 , 0.4619 , - 0.2706 , 0.4850 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.0607 , 1.0607 , 3.0000 , - 0.8446 , 0.4619 , - 0.2706 , 0.4225 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , 1.5000 , 5.1213 , - 0.8446 , 0.4619 , - 0.2706 , 0.4225 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.0607 , 1.0607 , 3.0000 , - 0.8034 , 0.4394 , - 0.4017 , 0.4225 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 3.0000 , 3.0000 , - 0.8034 , 0.4394 , - 0.4017 , 0.4850 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 1.0607 , 0.8787 , - 0.8034 , 0.4394 , - 0.4017 , 0.4850 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 2.1213 , 5.1213 , 0.1448 , - 0.3496 , 0.9256 , 0.4850 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , 1.5000 , 5.1213 , 0.1448 , - 0.3496 , 0.9256 , 0.4225 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 0.0000 , 4.3200 , 0.1448 , - 0.3496 , 0.9256 , 0.4538 , 0.2400 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , 1.5000 , 5.1213 , - 0.3574 , 0.8629 , 0.3574 , 0.4225 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 2.1213 , 5.1213 , - 0.3574 , 0.8629 , 0.3574 , 0.4850 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 3.0000 , 3.0000 , - 0.3574 , 0.8629 , 0.3574 , 0.4850 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , 1.5000 , 0.8787 , - 0.8629 , 0.3574 , - 0.3574 , 0.4225 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 2.1213 , 0.0000 , 0.8787 , - 0.8629 , 0.3574 , - 0.3574 , 0.3600 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 3.0000 , 0.0000 , 3.0000 , - 0.8629 , 0.3574 , - 0.3574 , 0.3600 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 2.1213 , 0.0000 , 0.8787 , - 0.3780 , 0.1566 , - 0.9125 , 0.3600 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , 1.5000 , 0.8787 , - 0.3780 , 0.1566 , - 0.9125 , 0.4225 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 0.0000 , 0.0000 , - 0.3780 , 0.1566 , - 0.9125 , 0.3913 , 0.7400 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.0607 , 1.0607 , 3.0000 , - 0.4706 , 0.8605 , 0.1949 , 0.4225 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 3.0000 , 0.0000 , 3.0000 , - 0.4706 , 0.8605 , 0.1949 , 0.3600 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 2.1213 , 0.0000 , 5.1213 , - 0.4706 , 0.8605 , 0.1949 , 0.3600 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 3.0000 , 0.0000 , 3.0000 , - 0.4619 , 0.8446 , 0.2706 , 0.3600 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.0607 , 1.0607 , 3.0000 , - 0.4619 , 0.8446 , 0.2706 , 0.4225 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , 1.5000 , 0.8787 , - 0.4619 , 0.8446 , 0.2706 , 0.4225 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , 1.5000 , 5.1213 , 0.3496 , - 0.1448 , 0.9256 , 0.4225 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 2.1213 , 0.0000 , 5.1213 , 0.3496 , - 0.1448 , 0.9256 , 0.3600 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 0.0000 , 4.3200 , 0.3496 , - 0.1448 , 0.9256 , 0.3913 , 0.2400 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 2.1213 , 0.0000 , 5.1213 , - 0.8918 , 0.3694 , - 0.2612 , 0.3600 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , 1.5000 , 5.1213 , - 0.8918 , 0.3694 , - 0.2612 , 0.4225 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.0607 , 1.0607 , 3.0000 , - 0.8918 , 0.3694 , - 0.2612 , 0.4225 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 2.1213 , 0.0000 , 0.8787 , - 0.8918 , - 0.3694 , 0.2612 , 0.3600 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , - 1.5000 , 0.8787 , - 0.8918 , - 0.3694 , 0.2612 , 0.2975 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.0607 , - 1.0607 , 3.0000 , - 0.8918 , - 0.3694 , 0.2612 , 0.2975 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , - 1.5000 , 0.8787 , - 0.3780 , - 0.1566 , - 0.9125 , 0.2975 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 2.1213 , 0.0000 , 0.8787 , - 0.3780 , - 0.1566 , - 0.9125 , 0.3600 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 0.0000 , 0.0000 , - 0.3780 , - 0.1566 , - 0.9125 , 0.3288 , 0.7400 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 3.0000 , 0.0000 , 3.0000 , - 0.4619 , - 0.8446 , - 0.2706 , 0.3600 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.0607 , - 1.0607 , 3.0000 , - 0.4619 , - 0.8446 , - 0.2706 , 0.2975 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , - 1.5000 , 5.1213 , - 0.4619 , - 0.8446 , - 0.2706 , 0.2975 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.0607 , - 1.0607 , 3.0000 , - 0.4706 , - 0.8605 , - 0.1949 , 0.2975 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 3.0000 , 0.0000 , 3.0000 , - 0.4706 , - 0.8605 , - 0.1949 , 0.3600 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 2.1213 , 0.0000 , 0.8787 , - 0.4706 , - 0.8605 , - 0.1949 , 0.3600 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 2.1213 , 0.0000 , 5.1213 , 0.3496 , 0.1448 , 0.9256 , 0.3600 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , - 1.5000 , 5.1213 , 0.3496 , 0.1448 , 0.9256 , 0.2975 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 0.0000 , 4.3200 , 0.3496 , 0.1448 , 0.9256 , 0.3288 , 0.2400 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , - 1.5000 , 5.1213 , - 0.8629 , - 0.3574 , 0.3574 , 0.2975 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 2.1213 , 0.0000 , 5.1213 , - 0.8629 , - 0.3574 , 0.3574 , 0.3600 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 3.0000 , 0.0000 , 3.0000 , - 0.8629 , - 0.3574 , 0.3574 , 0.3600 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , - 1.5000 , 0.8787 , 0.2113 , - 0.7214 , - 0.6595 , 0.2975 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , - 1.0607 , 0.8787 , 0.2113 , - 0.7214 , - 0.6595 , 0.2350 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , - 3.0000 , 3.0000 , 0.2113 , - 0.7214 , - 0.6595 , 0.2350 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , - 1.0607 , 0.8787 , 0.1837 , - 0.6271 , - 0.7570 , 0.2350 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , - 1.5000 , 0.8787 , 0.1837 , - 0.6271 , - 0.7570 , 0.2975 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 0.0000 , 0.0000 , 0.1837 , - 0.6271 , - 0.7570 , 0.2663 , 0.7400 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.0607 , - 1.0607 , 3.0000 , - 0.8605 , - 0.4706 , 0.1949 , 0.2975 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , - 3.0000 , 3.0000 , - 0.8605 , - 0.4706 , 0.1949 , 0.2350 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , - 2.1213 , 5.1213 , - 0.8605 , - 0.4706 , 0.1949 , 0.2350 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , - 3.0000 , 3.0000 , - 0.8446 , - 0.4619 , 0.2706 , 0.2350 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.0607 , - 1.0607 , 3.0000 , - 0.8446 , - 0.4619 , 0.2706 , 0.2975 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , - 1.5000 , 0.8787 , - 0.8446 , - 0.4619 , 0.2706 , 0.2975 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , - 1.5000 , 5.1213 , 0.1448 , 0.3496 , 0.9256 , 0.2975 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , - 2.1213 , 5.1213 , 0.1448 , 0.3496 , 0.9256 , 0.2350 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 0.0000 , 4.3200 , 0.1448 , 0.3496 , 0.9256 , 0.2663 , 0.2400 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , - 2.1213 , 5.1213 , - 0.3694 , - 0.8918 , - 0.2612 , 0.2350 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.5000 , - 1.5000 , 5.1213 , - 0.3694 , - 0.8918 , - 0.2612 , 0.2975 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , - 1.0607 , - 1.0607 , 3.0000 , - 0.3694 , - 0.8918 , - 0.2612 , 0.2975 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , - 1.0607 , 0.8787 , - 0.2757 , - 0.9413 , - 0.1949 , 0.2350 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 1.5000 , - 1.5000 , 0.8787 , - 0.2757 , - 0.9413 , - 0.1949 , 0.1725 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , - 2.1213 , 3.0000 , - 0.2757 , - 0.9413 , - 0.1949 , 0.1725 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 1.5000 , - 1.5000 , 0.8787 , - 0.1837 , - 0.6271 , - 0.7570 , 0.1725 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , - 1.0607 , 0.8787 , - 0.1837 , - 0.6271 , - 0.7570 , 0.2350 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 0.0000 , 0.0000 , - 0.1837 , - 0.6271 , - 0.7570 , 0.2038 , 0.7400 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , - 3.0000 , 3.0000 , 0.2924 , - 0.7058 , 0.6453 , 0.2350 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , - 2.1213 , 3.0000 , 0.2924 , - 0.7058 , 0.6453 , 0.1725 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.7500 , - 0.7500 , 5.1213 , 0.2924 , - 0.7058 , 0.6453 , 0.1725 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , - 2.1213 , 3.0000 , 0.2924 , - 0.7058 , - 0.6453 , 0.1725 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , - 3.0000 , 3.0000 , 0.2924 , - 0.7058 , - 0.6453 , 0.2350 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , - 1.0607 , 0.8787 , 0.2924 , - 0.7058 , - 0.6453 , 0.2350 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , - 2.1213 , 5.1213 , - 0.5427 , 0.2968 , 0.7857 , 0.2350 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.7500 , - 0.7500 , 5.1213 , - 0.5427 , 0.2968 , 0.7857 , 0.1725 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 0.0000 , 4.3200 , - 0.5427 , 0.2968 , 0.7857 , 0.2038 , 0.2400 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.7500 , - 0.7500 , 5.1213 , 0.8605 , - 0.4706 , 0.1949 , 0.1725 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , - 2.1213 , 5.1213 , 0.8605 , - 0.4706 , 0.1949 , 0.2350 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , - 3.0000 , 3.0000 , 0.8605 , - 0.4706 , 0.1949 , 0.2350 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 1.5000 , - 1.5000 , 0.8787 , 0.7214 , 0.2113 , - 0.6595 , 0.1725 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 1.0607 , 0.0000 , 0.8787 , 0.7214 , 0.2113 , - 0.6595 , 0.1100 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 3.0000 , 0.0000 , 3.0000 , 0.7214 , 0.2113 , - 0.6595 , 0.1100 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 1.0607 , 0.0000 , 0.8787 , 0.6271 , 0.1837 , - 0.7570 , 0.1100 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 1.5000 , - 1.5000 , 0.8787 , 0.6271 , 0.1837 , - 0.7570 , 0.1725 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 0.0000 , 0.0000 , 0.6271 , 0.1837 , - 0.7570 , 0.1412 , 0.7400 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , - 2.1213 , 3.0000 , 0.8629 , - 0.3574 , 0.3574 , 0.1725 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 3.0000 , 0.0000 , 3.0000 , 0.8629 , - 0.3574 , 0.3574 , 0.1100 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , 0.0000 , 5.1213 , 0.8629 , - 0.3574 , 0.3574 , 0.1100 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 3.0000 , 0.0000 , 3.0000 , 0.8629 , - 0.3574 , - 0.3574 , 0.1100 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , - 2.1213 , 3.0000 , 0.8629 , - 0.3574 , - 0.3574 , 0.1725 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 1.5000 , - 1.5000 , 0.8787 , 0.8629 , - 0.3574 , - 0.3574 , 0.1725 , 0.6150 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.7500 , - 0.7500 , 5.1213 , - 0.2968 , 0.5427 , 0.7857 , 0.1725 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , 0.0000 , 5.1213 , - 0.2968 , 0.5427 , 0.7857 , 0.1100 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.0000 , 0.0000 , 4.3200 , - 0.2968 , 0.5427 , 0.7857 , 0.1412 , 0.2400 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , 0.0000 , 5.1213 , 0.3607 , - 0.6595 , 0.6595 , 0.1100 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 0.7500 , - 0.7500 , 5.1213 , 0.3607 , - 0.6595 , 0.6595 , 0.1725 , 0.3650 , 16777215.0000 , 1.0000 ) ; this.d3d_model_vertex_normal_texture_color ( enigma.system.access ( this.global ) . model_chunk1 , 2.1213 , - 2.1213 , 3.0000 , 0.3607 , - 0.6595 , 0.6595 , 0.1725 , 0.4900 , 16777215.0000 , 1.0000 ) ; this.d3d_model_primitive_end ( enigma.system.access ( this.global ) . model_chunk1 ) ; ; } ; };
var fontstructarray = {0:{name:"pause_font",id:0,fontName:"Comic Sans MS",size:20,bold:true,italic:false,rangeMin:32,rangeMax:127}};

enigma.objects.obj_player = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = 0; this.visible = true; this.solid = false; this.persistent=false; this.parent=-100;this.mask=-1;
this.event_0_0=function(){;{ this.friction = 0.2 ; this.d3d_start ( ) ; this.d3d_set_hidden ( true ) ; this.d3d_set_lighting ( true ) ; this.d3d_set_shading ( true ) ; this.d3d_set_culling ( false ) ; this.d3d_set_fog ( true , this.c_black , 100 , 250 ) ; this.texture_set_interpolation ( false ) ; ; } ;{ enigma.system.access ( this.global ) . camx = this.x ; enigma.system.access ( this.global ) . camy = this.y ; enigma.system.access ( this.global ) . camsin = enigma.global.sin ( this.direction * this.pi / 180 ) ; enigma.system.access ( this.global ) . camcos = enigma.global.cos ( this.direction * this.pi / 180 ) ; ; } this.pitch = 0 ; this.z = 0 ; this.zfloor = 1 ; this.zgrav = 0.3 ; ;{ argument_relative = true ; enigma.global.action_create_object ( this.gun_thing , 0 , 0 ) ; } ; }; this.event_0_0();
this.event_3_0=function(){/* Erroring code */};enigma.system.event_loop.link_event(this.id,3,0,this.event_3_0,this);

this.event_3_2=function(){;{ enigma.system.access ( this.global ) . camx = this.x ; enigma.system.access ( this.global ) . camy = this.y ; enigma.system.access ( this.global ) . camsin = enigma.global.sin ( this.direction * this.pi / 180 ) ; enigma.system.access ( this.global ) . camcos = enigma.global.cos ( this.direction * this.pi / 180 ) ; ; } ; };enigma.system.event_loop.link_event(this.id,3,2,this.event_3_2,this);

this.event_4_79=function(){;{ this.x = this.xprevious ; this.y = this.yprevious ; if  ( enigma.global.abs ( this.hspeed ) >= enigma.global.abs ( this.vspeed ) && ! this.place_meeting ( this.x + this.hspeed , this.y , this.wall_basic ) )  ;{ this.x += this.hspeed ; exit ; ; } if  ( enigma.global.abs ( this.vspeed ) >= enigma.global.abs ( this.hspeed ) && ! this.place_meeting ( this.x , this.y + this.vspeed , this.wall_basic ) )  ;{ this.y += this.vspeed ; exit ; ; } this.speed = 0 ; ; } ; };enigma.system.event_loop.link_event(this.id,4,79,this.event_4_79,this);

this.event_5_65=function(){;{ var this.xn , this.yn ; this.xn = this.x - enigma.global.sin ( this.direction * this.pi / 180 ) ; this.yn = this.y - enigma.global.cos ( this.direction * this.pi / 180 ) ; if ( ! this.place_meeting ( this.xn , this.yn , this.wall_basic ) ) ;{ this.x = this.xn ; this.y = this.yn ; ; } ; } ; };enigma.system.event_loop.link_event(this.id,5,65,this.event_5_65,this);

this.event_5_68=function(){;{ var this.xn , this.yn ; this.xn = this.x + enigma.global.sin ( this.direction * this.pi / 180 ) ; this.yn = this.y + enigma.global.cos ( this.direction * this.pi / 180 ) ; if ( ! this.place_meeting ( this.xn , this.yn , this.wall_basic ) ) ;{ this.x = this.xn ; this.y = this.yn ; ; } ; } ; };enigma.system.event_loop.link_event(this.id,5,68,this.event_5_68,this);

this.event_5_83=function(){;{ var this.maxspeed ; if ( enigma.global.keyboard_check ( this.vk_shift ) ) this.maxspeed = 3 ; else this.maxspeed = 1.5 ; if  ( this.speed > - this.maxspeed )  this.speed = this.enigma_max ( - this.maxspeed , this.speed - 0.4 ) ; ; } ; };enigma.system.event_loop.link_event(this.id,5,83,this.event_5_83,this);

this.event_5_87=function(){;{ var this.maxspeed ; if ( enigma.global.keyboard_check ( this.vk_shift ) ) this.maxspeed = 3 ; else this.maxspeed = 1.5 ; if  ( this.speed < this.maxspeed )  this.speed = this.enigma_min ( this.maxspeed , this.speed + 0.4 ) ; ; } ; };enigma.system.event_loop.link_event(this.id,5,87,this.event_5_87,this);

this.event_6_53=function(){;{ argument_relative = true ; enigma.global.action_create_object ( this.bullit , 0 , 0 ) ; } ; };enigma.system.event_loop.link_event(this.id,6,53,this.event_6_53,this);

this.event_6_54=function(){if ( this.zgrav == 0 ) ;{ this.zfloor = 1 ; this.zspeed = 1 ; } ; };enigma.system.event_loop.link_event(this.id,6,54,this.event_6_54,this);

this.event_8_0=function(){;{ this.draw_set_alpha ( 1 ) ; this.draw_set_color ( this.c_white ) ; } this.ani = enigma.global.sin ( enigma.system.access ( this.obj_player ) . ani ) / 128 * enigma.system.access ( this.obj_player ) . snipe ; this.xf = this.x ; this.yf = this.y ; this.zf = this.z ; this.xt = this.xf + enigma.global.cos ( this.degtorad ( this.direction ) ) + this.ani ; this.yt = this.yf - enigma.global.sin ( this.degtorad ( this.direction ) ) + this.ani ; this.zt = this.zf - enigma.global.sin ( this.degtorad ( this.zdirection ) ) + this.ani ; this.angle = 60 - enigma.system.access ( this.obj_player ) . snipe * 40 ; this.d3d_set_projection_ext ( this.xf , this.yf , this.zf + 13 , this.xt , this.yt , this.zt + 13 , 0 , 0 , 1 , this.angle + this.ani * 16 , 1 , 1 , 8048 ) ; ; };enigma.system.event_loop.link_event(this.id,8,0,this.event_8_0,this);

this.event_9_13=function(){/* Erroring code */};enigma.system.event_loop.link_event(this.id,9,13,this.event_9_13,this);

this.event_9_80=function(){this.action_font ( this.pause_font , 1 ) ;{ this.d3d_set_projection_ortho ( 0 , 0 , this.room_width , this.room_height , 0 ) ; this.draw_text ( this.room_width / 2 , 100 , 'Paused' ) ; this.screen_refresh ( ) ; this.keyboard_wait ( ) ; ; } ; };enigma.system.event_loop.link_event(this.id,9,80,this.event_9_80,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, -100);};

enigma.objects.bullit = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = 14; this.visible = true; this.solid = false; this.persistent=false; this.parent=-100;this.mask=-1;
this.event_0_0=function(){this.z = 6 + enigma.system.access ( this.obj_player ) . z ;{ argument_relative == false ; this.action_set_motion ( enigma.system.access ( this.pbj_player ) . direction , 4 ) ; } ; }; this.event_0_0();
this.event_4_72=function(){;{ argument_relative = true ; enigma.global.action_create_object ( this.gore_spr , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( this.gore_spr , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( this.gore_spr , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( this.gore_spr , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( this.gore_spr , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( this.gore_spr , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( this.gore_spr , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( this.gore_spr , 0 , 0 ) ; } enigma.global.action_kill_object ( ) ; };enigma.system.event_loop.link_event(this.id,4,72,this.event_4_72,this);

this.event_8_0=function(){;{ argument_relative = false ; this.d3d_transform_set_identity ( ) ; } ;{ argument_relative = false ; this.d3d_transform_add_translation ( this.argument0 , this.argument1 , this.argument2 ) ; } ;{ argument_relative = false ; enigma.system.access ( this.global ) . tex = this.argument0 ; } ;{ argument_relative = false ; this.d3d_draw_ellipsoid ( this.argument0 , this.argument1 , this.argument2 , this.argument3 , this.argument4 , this.argument5 , enigma.system.access ( this.global ) . tex , 1 , 1 , 16 ) ; } ;{ argument_relative = false ; this.d3d_transform_set_identity ( ) ; } ; };enigma.system.event_loop.link_event(this.id,8,0,this.event_8_0,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, 0);};

enigma.objects.roomname = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = 16; this.visible = true; this.solid = false; this.persistent=false; this.parent=-100;this.mask=-1;
this.event_8_0=function(){enigma.global.action_color ( 0xFF0000 ) ; this.action_font ( this.pause_font , 1 ) ;{ this.d3d_set_lighting ( false ) ; this.d3d_set_projection_ortho ( 0 , 0 , this.room_width , this.room_height , 0 ) ; this.draw_text ( this.room_width / 2 , 0 , this.window_get_caption ( ) ) ; ; } ; };enigma.system.event_loop.link_event(this.id,8,0,this.event_8_0,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, -100);};

enigma.objects.nolook = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = -1; this.visible = true; this.solid = false; this.persistent=false; this.parent=-100;this.mask=-1;
this.event_0_0=function(){this.action_set_cursor ( - 1 , 0 ) ; }; this.event_0_0();
this.event_8_0=function(){;{ this.d3d_set_projection_ortho ( 0 , 0 , this.room_width , this.room_height , 0 ) ; } ; };enigma.system.event_loop.link_event(this.id,8,0,this.event_8_0,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, -100);};

enigma.objects.gun_thing = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = 23; this.visible = true; this.solid = false; this.persistent=false; this.parent=-100;this.mask=-1;
this.event_0_0=function(){this.gun_obj = this.d3d_model_create ( ) ; this.d3d_model_load ( this.gun_obj , 'ump.d3d' ) ; this.x = enigma.system.access ( this.obj_player ) . x + this.lengthdir_x ( 8 , enigma.system.access ( this.obj_player ) . direction ) ; this.y = enigma.system.access ( this.obj_player ) . y + this.lengthdir_y ( 8 , enigma.system.access ( this.obj_player ) . direction ) ; ; }; this.event_0_0();
this.event_3_0=function(){;{ this.x = enigma.system.access ( this.obj_player ) . x + 7 ; this.y = enigma.system.access ( this.obj_player ) . y + 2 ; } this.direction = enigma.system.access ( this.obj_player ) . direction ; this.z = enigma.system.access ( this.obj_player ) . z ; this.image_speed = 0.8 ;{ this.image_index += 1 ; } ; };enigma.system.event_loop.link_event(this.id,3,0,this.event_3_0,this);

this.event_8_0=function(){;{ argument_relative = false ; this.d3d_transform_set_identity ( ) ; } this.rot = enigma.system.access ( this.obj_player ) . direction ; this.d3d_transform_set_identity ( ) ; this.d3d_transform_add_rotation_z ( this.rot + 180 ) ; this.d3d_transform_add_translation ( enigma.system.access ( this.obj_player ) . x , enigma.system.access ( this.obj_player ) . y , this.z + 7 ) ; this.d3d_model_draw ( enigma.system.access ( this.obj_player ) . gun_obj , 0 , 0 , 0 , this.sprite_get_texture ( this.guntex , this.image_index ) ) ; this.d3d_transform_set_identity ( ) ; ;{ argument_relative = false ; this.d3d_transform_set_identity ( ) ; } ; };enigma.system.event_loop.link_event(this.id,8,0,this.event_8_0,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, -1);};

enigma.objects.fountain = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = -1; this.visible = true; this.solid = false; this.persistent=false; this.parent=-100;this.mask=-1;
this.event_5_32=function(){;{ argument_relative = true ; enigma.global.action_create_object ( this.chunk_obj , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( this.gore_spr , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( - 1 , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( - 1 , 0 , 0 ) ; } ; };enigma.system.event_loop.link_event(this.id,5,32,this.event_5_32,this);

this.event_9_32=function(){;{ argument_relative = true ; enigma.global.action_create_object ( this.chunk3 , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( this.chunk3 , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( this.chunk3 , 0 , 0 ) ; } ; };enigma.system.event_loop.link_event(this.id,9,32,this.event_9_32,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, -1);};

enigma.objects.chunk_obj = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = 14; this.visible = true; this.solid = false; this.persistent=false; this.parent=-100;this.mask=-1;
this.event_0_0=function(){;{ argument_relative = false ; this.action_set_friction ( 0.01 ) ; } enigma.system.access ( this.global ) . model_chunk1 = this.d3d_model_create ( ) ; this.d3d_model_load ( enigma.system.access ( this.global ) . model_chunk1 , 'chunk1.gmmod' ) ; if ( this.zgrav == 0 ) ;{ this.zfloor = 1 ; this.zspeed = 0.1 ; } this.pitch = 0 ; this.zfloor = 1 ; this.zgrav = 0.2 ; ;{ this.z = 15 ; this.tex = this.background_get_texture ( this.chunktex ) ; } ;{ argument_relative = false ; this.action_set_motion ( enigma.global.random ( 360 ) , enigma.global.random ( 1 ) ) ; } ;{ argument_relative = true ; enigma.global.action_set_alarm ( 30 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_set_alarm ( 100 , 1 ) ; } ;{ this.image_index = enigma.global.random ( - 1 ) ; } ; }; this.event_0_0();
this.event_2_1=function(){enigma.global.action_kill_object ( ) ; };enigma.system.event_loop.link_event(this.id,2,1,this.event_2_1,this);

this.event_3_0=function(){/* Erroring code */};enigma.system.event_loop.link_event(this.id,3,0,this.event_3_0,this);

this.event_4_74=function(){this.action_bounce ( 1 , 1 ) ; };enigma.system.event_loop.link_event(this.id,4,74,this.event_4_74,this);

this.event_4_75=function(){this.action_bounce ( 1 , 1 ) ; };enigma.system.event_loop.link_event(this.id,4,75,this.event_4_75,this);

this.event_8_0=function(){this.d3d_transform_set_identity ( ) ; this.d3d_transform_add_translation ( this.x , this.y , this.z ) ; this.d3d_set_lighting ( 0 ) ; this.texture_set_interpolation ( 1 ) ; this.texture_set_repeat ( 1 ) ; this.draw_set_color ( this.c_white ) ; this.d3d_model_draw ( enigma.system.access ( this.global ) . model_chunk1 , this.argument0 , this.argument1 , this.argument2 , this.background_get_texture ( this.chunktex ) ) ; this.d3d_transform_set_identity ( ) ; ; };enigma.system.event_loop.link_event(this.id,8,0,this.event_8_0,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, -1);};

enigma.objects.chunk2_obj = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = 14; this.visible = true; this.solid = false; this.persistent=false; this.parent=-100;this.mask=-1;
this.event_0_0=function(){;{ argument_relative = false ; this.action_set_friction ( 0.01 ) ; } enigma.system.access ( this.global ) . model_chunk1 = this.d3d_model_create ( ) ; this.d3d_model_load ( enigma.system.access ( this.global ) . model_chunk1 , 'chunk1.gmmod' ) ; if ( this.zgrav == 0 ) ;{ this.zfloor = 1 ; this.zspeed = 1 ; } this.pitch = 0 ; this.zfloor = 1 ; this.zgrav = 0.2 ; ;{ this.z = 10 ; this.tex = this.background_get_texture ( this.chunktex ) ; } ;{ argument_relative = false ; this.action_set_motion ( enigma.global.random ( 360 ) , enigma.global.random ( 1 ) ) ; } ;{ argument_relative = true ; enigma.global.action_set_alarm ( 20 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_set_alarm ( 10 , 1 ) ; } ; }; this.event_0_0();
this.event_2_1=function(){enigma.global.action_kill_object ( ) ; };enigma.system.event_loop.link_event(this.id,2,1,this.event_2_1,this);

this.event_3_0=function(){/* Erroring code */};enigma.system.event_loop.link_event(this.id,3,0,this.event_3_0,this);

this.event_4_74=function(){this.action_bounce ( 1 , 1 ) ; };enigma.system.event_loop.link_event(this.id,4,74,this.event_4_74,this);

this.event_4_75=function(){this.action_bounce ( 1 , 1 ) ; };enigma.system.event_loop.link_event(this.id,4,75,this.event_4_75,this);

this.event_8_0=function(){this.d3d_transform_set_identity ( ) ; this.d3d_transform_add_translation ( this.x , this.y , this.z ) ; this.texture_set_interpolation ( 1 ) ; this.texture_set_repeat ( 1 ) ; this.draw_set_color ( this.c_white ) ; this.d3d_model_draw ( enigma.system.access ( this.global ) . model_chunk1 , this.argument0 , this.argument1 , this.argument2 , this.background_get_texture ( this.chunktex ) ) ; this.d3d_transform_set_identity ( ) ; ; };enigma.system.event_loop.link_event(this.id,8,0,this.event_8_0,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, -1);};

enigma.objects.gore_spr = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = 11; this.visible = true; this.solid = false; this.persistent=false; this.parent=-100;this.mask=-1;
this.event_0_0=function(){;{ argument_relative = false ; this.action_set_friction ( 0.01 ) ; } if ( this.zgrav == 0 ) ;{ this.zfloor = 1 ; this.zspeed = 0.3 ; } this.pitch = 0 ; this.zfloor = 1 ; this.zgrav = 0.2 ; ;{ this.z = enigma.global.random ( 15 ) ; this.tex = this.background_get_texture ( this.chunktex ) ; this.spr = enigma.global.random ( 4 ) ; } ;{ argument_relative = false ; this.action_set_motion ( enigma.global.random ( 360 ) , enigma.global.random ( 1 ) ) ; } ;{ argument_relative = true ; enigma.global.action_set_alarm ( 30 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_set_alarm ( 150 , 1 ) ; } ; }; this.event_0_0();
this.event_2_1=function(){enigma.global.action_kill_object ( ) ; };enigma.system.event_loop.link_event(this.id,2,1,this.event_2_1,this);

this.event_3_0=function(){/* Erroring code */};enigma.system.event_loop.link_event(this.id,3,0,this.event_3_0,this);

this.event_4_79=function(){;{ argument_relative = true ; enigma.global.action_create_object ( this.gore_splat , 0 , 0 ) ; } ; };enigma.system.event_loop.link_event(this.id,4,79,this.event_4_79,this);

this.event_8_0=function(){;{ if  ( this.point_distance ( this.x , this.y , enigma.system.access ( this.global ) . camx , enigma.system.access ( this.global ) . camy ) > 240 )  exit ; var this.tex ; this.tex = this.sprite_get_texture ( this.gore , this.img ) ; this.d3d_draw_wall ( this.x - 4 * enigma.system.access ( this.global ) . camsin , this.y - 4 * enigma.system.access ( this.global ) . camcos , this.z , this.x + 4 * enigma.system.access ( this.global ) . camsin , this.y + 4 * enigma.system.access ( this.global ) . camcos , this.z + 4 , this.tex , 1 , 1 ) ; ; } ; };enigma.system.event_loop.link_event(this.id,8,0,this.event_8_0,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, -1);};

enigma.objects.gore_puddle = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = 37; this.visible = true; this.solid = false; this.persistent=false; this.parent=-100;this.mask=-1;
this.event_0_0=function(){;{ this.img = enigma.global.random ( 4 ) ; this.ran = enigma.global.random ( 1 ) ; } ;{ this.alph = 1 ; } ;{ argument_relative = true ; enigma.global.action_set_alarm ( 150 , 0 ) ; } ; }; this.event_0_0();
this.event_2_0=function(){this.alph += - 0.005 ;{ argument_relative == true ; enigma.global.action_set_alarm ( 1 , 0 ) ; } ; };enigma.system.event_loop.link_event(this.id,2,0,this.event_2_0,this);

this.event_3_0=function(){/* Erroring code */};enigma.system.event_loop.link_event(this.id,3,0,this.event_3_0,this);

this.event_8_0=function(){;{ this.draw_set_alpha ( this.alph ) ; this.texture_set_interpolation ( false ) ; this.d3d_draw_floor ( this.x + 8 , this.y - 8 , this.ran , this.x - 8 , this.y + 8 , this.ran , this.sprite_get_texture ( this.blood_puddle , this.image_index ) , 1 , 1 ) ; this.draw_set_alpha ( 1 ) ; } ; };enigma.system.event_loop.link_event(this.id,8,0,this.event_8_0,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, 0);};

enigma.objects.slpat = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = 16; this.visible = true; this.solid = false; this.persistent=false; this.parent=-100;this.mask=-1;
this.event_0_0=function(){;{ argument_relative = true ; enigma.global.action_set_alarm ( 2 , 0 ) ; } ; }; this.event_0_0();
this.event_2_0=function(){enigma.global.action_kill_object ( ) ; };enigma.system.event_loop.link_event(this.id,2,0,this.event_2_0,this);

this.event_8_0=function(){;{ if  ( this.point_distance ( this.x , this.y , enigma.system.access ( this.global ) . camx , enigma.system.access ( this.global ) . camy ) > 240 )  exit ; var this.tex ; this.tex = this.sprite_get_texture ( this.splash_spr , this.image_index ) ; this.d3d_draw_wall ( this.x - 2 * enigma.system.access ( this.global ) . camsin , this.y - 2 * enigma.system.access ( this.global ) . camcos , this.z + 4 , this.x + 2 * enigma.system.access ( this.global ) . camsin , this.y + 2 * enigma.system.access ( this.global ) . camcos , this.z , this.tex , 1 , 1 ) ; ; } ; };enigma.system.event_loop.link_event(this.id,8,0,this.event_8_0,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, 0);};

enigma.objects.chunk3 = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = 5; this.visible = true; this.solid = true; this.persistent=false; this.parent=-100;this.mask=-1;
this.event_0_0=function(){;{ argument_relative = false ; this.action_set_friction ( 0.01 ) ; } enigma.system.access ( this.global ) . model_chunk1 = this.d3d_model_create ( ) ; this.d3d_model_load ( enigma.system.access ( this.global ) . model_chunk1 , 'chunk1.gmmod' ) ; if ( this.zgrav == 0 ) ;{ this.zfloor = 1 ; this.zspeed = 1 ; } this.pitch = 0 ; this.zfloor = 1 ; this.zgrav = 0.2 ; ;{ this.z = 10 ; this.tex = this.background_get_texture ( this.chunktex ) ; } ;{ argument_relative = false ; this.action_set_motion ( enigma.global.random ( 360 ) , enigma.global.random ( 1 ) ) ; } ; }; this.event_0_0();
this.event_2_1=function(){enigma.global.action_kill_object ( ) ; };enigma.system.event_loop.link_event(this.id,2,1,this.event_2_1,this);

this.event_3_0=function(){/* Erroring code */};enigma.system.event_loop.link_event(this.id,3,0,this.event_3_0,this);

this.event_4_74=function(){this.action_bounce ( 1 , 1 ) ; };enigma.system.event_loop.link_event(this.id,4,74,this.event_4_74,this);

this.event_4_75=function(){this.action_bounce ( 1 , 1 ) ; };enigma.system.event_loop.link_event(this.id,4,75,this.event_4_75,this);

this.event_8_0=function(){this.d3d_transform_set_identity ( ) ; this.d3d_transform_add_rotation_x ( this.dir ) ; this.d3d_transform_add_rotation_y ( this.dir ) ; this.d3d_transform_add_scaling ( 4 , 4 , 4 ) ; this.d3d_transform_add_translation ( this.x , this.y , this.z + 1 ) ; this.texture_set_interpolation ( 1 ) ; this.texture_set_repeat ( 1 ) ; this.draw_set_color ( this.c_white ) ; this.d3d_model_draw ( enigma.system.access ( this.global ) . model_chunk1 , this.argument0 , this.argument1 , this.argument2 , this.background_get_texture ( this.chunktex ) ) ; this.d3d_transform_set_identity ( ) ; ; };enigma.system.event_loop.link_event(this.id,8,0,this.event_8_0,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, -1);};

enigma.objects.gore_test = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = 2; this.visible = true; this.solid = true; this.persistent=false; this.parent=-100;this.mask=-1;
this.event_0_0=function(){;{ this.z = 0 ; } ;{ this.maxhealth = 10 ; } ; }; this.event_0_0();
this.event_4_30=function(){;{ this.maxhealth -= 1 ; } ; };enigma.system.event_loop.link_event(this.id,4,30,this.event_4_30,this);

this.event_8_0=function(){;{ this.tex = this.sprite_get_texture ( this.dummy , this.image_index ) ; this.d3d_draw_wall ( this.x - 8 * enigma.system.access ( this.global ) . camsin , this.y - 8 * enigma.system.access ( this.global ) . camcos , 16 , this.x + 8 * enigma.system.access ( this.global ) . camsin , this.y + 8 * enigma.system.access ( this.global ) . camcos , 0 , this.tex , 1 , 1 ) ; ; } ; };enigma.system.event_loop.link_event(this.id,8,0,this.event_8_0,this);

this.event_9_32=function(){;{ argument_relative = true ; enigma.global.action_create_object ( this.gore_fountain_last , 0 , 0 ) ; } enigma.global.action_kill_object ( ) ; };enigma.system.event_loop.link_event(this.id,9,32,this.event_9_32,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, 0);};

enigma.objects.gore_fountain_last = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = -1; this.visible = true; this.solid = false; this.persistent=false; this.parent=-100;this.mask=-1;
this.event_0_0=function(){;{ argument_relative = true ; enigma.global.action_create_object ( this.chunk3 , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( this.chunk3 , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( this.chunk3 , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_set_alarm ( 20 , 0 ) ; } ; }; this.event_0_0();
this.event_2_0=function(){enigma.global.action_kill_object ( ) ; };enigma.system.event_loop.link_event(this.id,2,0,this.event_2_0,this);

this.event_3_0=function(){;{ argument_relative = true ; enigma.global.action_create_object ( this.chunk_obj , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( this.gore_spr , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( this.gore_spr , 0 , 0 ) ; } ;{ argument_relative = true ; enigma.global.action_create_object ( this.gore_spr , 0 , 0 ) ; } ; };enigma.system.event_loop.link_event(this.id,3,0,this.event_3_0,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, -1);};

enigma.objects.wallH = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = 1; this.visible = true; this.solid = false; this.persistent=false; this.parent=79;this.mask=-1;
this.event_0_0=function(){;{ this.x1 = this.x - 16 ; this.x2 = this.x + 16 ; this.y1 = this.y ; this.y2 = this.y ; this.z1 = 35 ; this.z2 = 0 ; this.tex = this.background_get_texture ( this.back ) ; } ; }; this.event_0_0();this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, 0);};

enigma.objects.wallv = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = 3; this.visible = true; this.solid = false; this.persistent=false; this.parent=79;this.mask=-1;
this.event_0_0=function(){;{ this.x1 = this.x ; this.x2 = this.x ; this.y1 = this.y + 16 ; this.y2 = this.y - 16 ; this.z1 = 35 ; this.z2 = 0 ; this.tex = this.background_get_texture ( this.back ) ; } ; }; this.event_0_0();this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, 0);};

enigma.objects.wallV_basic = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = -1; this.visible = true; this.solid = false; this.persistent=false; this.parent=79;this.mask=-1;
this.event_8_0=function(){;{ if  ( this.point_distance ( this.x , this.y , enigma.system.access ( this.global ) . camx , enigma.system.access ( this.global ) . camy ) > 280 )  exit ; this.d3d_draw_wall ( this.x1 , this.y1 , this.z1 , this.x2 , this.y2 , this.z2 , this.tex , 1 , 1 ) ; } ; };enigma.system.event_loop.link_event(this.id,8,0,this.event_8_0,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, 0);};

enigma.objects.wall_Hbasic = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = -1; this.visible = true; this.solid = false; this.persistent=false; this.parent=79;this.mask=-1;
this.event_8_0=function(){;{ if  ( this.point_distance ( this.x , this.y , enigma.system.access ( this.global ) . camx , enigma.system.access ( this.global ) . camy ) > 280 )  exit ; this.d3d_draw_wall ( this.x1 , this.y1 , this.z1 , this.x2 , this.y2 , this.z2 , this.tex , 1 , 1 ) ; } ; };enigma.system.event_loop.link_event(this.id,8,0,this.event_8_0,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, 0);};

enigma.objects.gore_splat = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = 37; this.visible = true; this.solid = false; this.persistent=false; this.parent=-100;this.mask=-1;
this.event_0_0=function(){;{ this.img = enigma.global.random ( 4 ) ; this.ran = enigma.global.random ( 1 ) ; } ;{ this.z = enigma.system.access ( this.gore_spr ) . z ; } this.rot = 0 ;{ this.x1 == this.x ; this.y1 = this.y ; this.x2 = this.x ; this.y2 = this.y ; } ; }; this.event_0_0();
this.event_2_0=function(){enigma.global.action_kill_object ( ) ; };enigma.system.event_loop.link_event(this.id,2,0,this.event_2_0,this);

this.event_3_0=function(){this.image_index = this.img ; };enigma.system.event_loop.link_event(this.id,3,0,this.event_3_0,this);

this.event_4_74=function(){;{ this.x1 = this.x - 8 ; this.y1 = this.y ; this.x2 = this.x + 8 ; this.y2 = this.y ; } ; };enigma.system.event_loop.link_event(this.id,4,74,this.event_4_74,this);

this.event_4_75=function(){;{ this.x1 = this.x ; this.y1 = this.y - 8 ; this.x2 = this.x ; this.y2 = this.y + 8 ; } ; };enigma.system.event_loop.link_event(this.id,4,75,this.event_4_75,this);

this.event_8_0=function(){;{ this.texture_set_interpolation ( false ) ; this.d3d_draw_wall ( this.x1 , this.y1 , this.z + 0 , this.x2 , this.y2 , this.z + 16 , this.sprite_get_texture ( this.blood_puddle , this.image_index ) , 1 , 1 ) ; } ; };enigma.system.event_loop.link_event(this.id,8,0,this.event_8_0,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, 0);};

enigma.objects.wall_basic = function(id, oid, x, y) {this.prototype = new enigma.objects.object_locals(id, oid, x, y); this.id=id;	this.x=x; this.y=y;this.sprite_index = -1; this.visible = true; this.solid = false; this.persistent=false; this.parent=-100;this.mask=-1;
this.event_8_0=function(){;{ if  ( this.point_distance ( this.x , this.y , enigma.system.access ( this.global ) . camx , enigma.system.access ( this.global ) . camy ) > 280 )  exit ; this.d3d_draw_wall ( this.x1 , this.y1 , this.z1 , this.x2 , this.y2 , this.z2 , this.tex , 1 , 1 ) ; } ; };enigma.system.event_loop.link_event(this.id,8,0,this.event_8_0,this);
this.myevent_draw=function() {if (this.image_single!=-1) { this.image_speed = 0; this.image_index = this.image_single; } 
if (this.visible && this.sprite_index != -1) enigma.global.draw_sprite_ext(this.sprite_index,this.image_index,this.x,this.y,this.image_xscale,this.image_yscale,this.image_angle,this.image_blend,this.image_alpha);};
enigma.classes.depth(this, 0);};

enigma.rooms.room0 = function() {this.name="room0"; this.id=0; this.caption="Standard Gore effect"; this.width=640; this.height=480;this.speed=30; this.persistent=false; this.backgroundColor=255;this.drawBackgroundColor=true; this.enableViews=false;

this.creationCode=function(){; }
 new enigma.objects.wallH(102841,74,48,80);
 new enigma.objects.wallH(102842,74,48,48);
 new enigma.objects.wallH(102843,74,16,48);
 new enigma.objects.wallH(102844,74,16,80);
 new enigma.objects.wallH(102845,74,80,80);
 new enigma.objects.wallH(102846,74,80,48);
 new enigma.objects.wallH(102847,74,112,48);
 new enigma.objects.wallH(102848,74,144,48);
 new enigma.objects.wallH(102849,74,112,80);
 new enigma.objects.wallH(102850,74,144,80);
 new enigma.objects.wallv(102856,75,160,64);
 new enigma.objects.wallv(102868,75,0,64);
 new enigma.objects.gore_test(102875,72,152,64);
 new enigma.objects.roomname(102798,44,16,16);
 new enigma.objects.obj_player(102839,0,32,64);};
var room = new enigma.rooms.room0();